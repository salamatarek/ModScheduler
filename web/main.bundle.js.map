{"version":3,"sources":["webpack:///./src/app/activityDialog.component.ts","webpack:///./src/app/activityDialog.service.ts","webpack:///./src/processDialog/processDialog.component.ts","webpack:///./src/processDialog/processDialog.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/activityDialog.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/processDialog/processDialog.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/activityDialog.component.html","webpack:///./src/app/app.component.html","webpack:///./src/processDialog/processDialog.component.html","webpack:///./src/app/app.httpService.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { MdDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'activity-dialog',\r\n  templateUrl: 'activityDialog.component.html',\r\n})\r\nexport class ActivityDialog {\r\n  public dialogName: string;\r\n  public id: number;\r\n  public name: string;\r\n  public units: number;\r\n  public safeProductivityRate: number;\r\n  public aggressiveProductivityRate: number;\r\n  public duration: number;\r\n  public aggressiveDuration: number;\r\n  public inputProdRate: boolean;\r\n  public startToFinish: number;\r\n  public unitDelta: number;\r\n  public durationFunction: number;\r\n  public durationFunctions: Array<Object>;\r\n  public activities: Array<Object>;\r\n  public activitySelected: Array<number>;\r\n  public processSelected: string;\r\n  public section: string;\r\n  public processes: Array<Object>;\r\n\r\n  constructor(public dialogRef: MdDialogRef<ActivityDialog>) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/activityDialog.component.ts","import { Observable } from 'rxjs/Rx';\r\nimport { ActivityDialog } from './activityDialog.component';\r\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\r\nimport { Injectable, ViewContainerRef } from '@angular/core';\r\nimport { Activity, Process, HttpService } from './app.httpService';\r\n\r\n@Injectable()\r\nexport class ActivityDialogService {\r\n\r\n    constructor(private dialog: MdDialog,\r\n        private httpService: HttpService) { }\r\n\r\n    public confirm(activity: Activity, viewContainerRef: ViewContainerRef, section: string): Observable<ActivityDialog> {\r\n\r\n        let dialogRef: MdDialogRef<ActivityDialog>;\r\n        let config = new MdDialogConfig();\r\n        config.viewContainerRef = viewContainerRef;\r\n\r\n        dialogRef = this.dialog.open(ActivityDialog, config);\r\n\r\n        dialogRef.componentInstance.durationFunctions = [\r\n            { key: 0, value: 'MAX' },\r\n            { key: 1, value: 'NONE' }];\r\n        dialogRef.componentInstance.durationFunction = 1;\r\n        dialogRef.componentInstance.duration = 10;\r\n        dialogRef.componentInstance.aggressiveDuration = 5;\r\n        dialogRef.componentInstance.inputProdRate = true;\r\n        dialogRef.componentInstance.activitySelected = [,];\r\n        dialogRef.componentInstance.dialogName = 'Add';\r\n        dialogRef.componentInstance.units = 10;\r\n        dialogRef.componentInstance.safeProductivityRate = 1;\r\n        dialogRef.componentInstance.aggressiveProductivityRate = 1;\r\n        dialogRef.componentInstance.startToFinish = 0;\r\n        dialogRef.componentInstance.unitDelta = 0;\r\n        this.httpService.getActivities()\r\n            .subscribe((activities) => {\r\n                dialogRef.componentInstance.activities = activities\r\n                    .filter(a => a.section === section)\r\n                    .map(p =>\r\n                    { return { key: p.id, value: p.name }; });\r\n                dialogRef.componentInstance.activities.push({ key: ' ', value: 'NONE' });\r\n                if (activity) {\r\n                    dialogRef.componentInstance.activitySelected = activity.dependencies.split(',')\r\n                        .map(d => {\r\n                            if (d !== \"\") return +d;\r\n                            else return null;\r\n                        });\r\n                }\r\n            });\r\n\r\n        let processObs = this.httpService.getProcesses()\r\n            .subscribe((processes) => {\r\n                dialogRef.componentInstance.processes = processes\r\n                    .map(p => { return { key: p.id, value: p.name }; });\r\n\r\n                if (activity) {\r\n                    dialogRef.componentInstance.processSelected = activity.processId;\r\n                }\r\n            });\r\n\r\n        if (activity) {\r\n            dialogRef.componentInstance.dialogName = 'Update';\r\n            dialogRef.componentInstance.id = activity.id;\r\n            dialogRef.componentInstance.name = activity.name;\r\n            dialogRef.componentInstance.units = activity.units;\r\n            dialogRef.componentInstance.safeProductivityRate = activity.safeProductivityRate;\r\n            dialogRef.componentInstance.aggressiveProductivityRate = activity.aggressiveProductivityRate;\r\n            dialogRef.componentInstance.duration = activity.duration;\r\n            dialogRef.componentInstance.aggressiveDuration = activity.aggressiveDuration;\r\n            dialogRef.componentInstance.inputProdRate = activity.inputProdRate;\r\n            dialogRef.componentInstance.startToFinish = activity.startToFinish;\r\n            dialogRef.componentInstance.unitDelta = activity.unitDelta;\r\n            dialogRef.componentInstance.durationFunction = activity.durationFunction;\r\n            dialogRef.componentInstance.name = activity.name;\r\n            dialogRef.componentInstance.section = activity.section;\r\n        }\r\n\r\n        return dialogRef.afterClosed();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/activityDialog.service.ts","import { Component } from '@angular/core';\r\nimport { MdDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'process-dialog',\r\n  templateUrl: 'processDialog.component.html',\r\n})\r\nexport class ProcessDialog {\r\n  public dialogName: string;\r\n  public id: number;\r\n  public name: string;\r\n\r\n  constructor(public dialogRef: MdDialogRef<ProcessDialog>) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/processDialog/processDialog.component.ts","import { Observable } from 'rxjs/Rx';\r\nimport { ProcessDialog } from './processDialog.component';\r\nimport { MdDialogRef, MdDialog, MdDialogConfig } from '@angular/material';\r\nimport { Injectable, ViewContainerRef } from '@angular/core';\r\nimport { Process, HttpService } from '../app/app.httpService';\r\n\r\n@Injectable()\r\nexport class ProcessDialogService {\r\n\r\n    constructor(private dialog: MdDialog,\r\n        private httpService: HttpService) { }\r\n\r\n    public confirm(process: Process, viewContainerRef: ViewContainerRef): Observable<ProcessDialog> {\r\n\r\n        let dialogRef: MdDialogRef<ProcessDialog>;\r\n        let config = new MdDialogConfig();\r\n        config.viewContainerRef = viewContainerRef;\r\n\r\n        dialogRef = this.dialog.open(ProcessDialog, config);\r\n        dialogRef.componentInstance.dialogName = 'Add';\r\n\r\n        if (process) {\r\n            dialogRef.componentInstance.dialogName = 'Update';\r\n            dialogRef.componentInstance.id = process.id;\r\n            dialogRef.componentInstance.name = process.name;\r\n        }\r\n\r\n        return dialogRef.afterClosed();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/processDialog/processDialog.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 235;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 235\n// module chunks = 0","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment().production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { ActivityDialogService } from './activityDialog.service';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ActivityDialog }   from './activityDialog.component';\r\nimport { HttpService } from './app.httpService';\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        MaterialModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        ActivityDialog,\r\n    ],\r\n    declarations: [\r\n        ActivityDialog,\r\n    ],\r\n    providers: [\r\n        ActivityDialogService,\r\n        HttpService\r\n    ],\r\n    entryComponents: [\r\n        ActivityDialog,\r\n    ],\r\n    schemas: [ \r\n        CUSTOM_ELEMENTS_SCHEMA \r\n    ],\r\n})\r\nexport class ActivityDialogModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/activityDialog.module.ts","import { Component, ViewContainerRef } from '@angular/core';\r\nimport { MdDialog, MdDialogConfig } from '@angular/material';\r\nimport { Activity, Process, HttpService } from './app.httpService';\r\nimport { ActivityDialogService } from './activityDialog.service';\r\nimport { ProcessDialogService } from '../processDialog/processDialog.service';\r\nimport { ActivityDialog } from './activityDialog.component';\r\nimport { ProcessDialog } from '../processDialog/processDialog.component';\r\nimport { MdDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    providers: [HttpService]\r\n})\r\nexport class AppComponent {\r\n    public result: any;\r\n    errorMessage: string;\r\n    activities: Activity[];\r\n    downwardActivities: Activity[];\r\n    processes: Process[];\r\n    graphConfig: {};\r\n    editing = {};\r\n    newEditing = {};\r\n    newActivity: Activity[];\r\n    selectedRowActivity = [];\r\n    selectedDownwardRowActivity = [];\r\n    selectedRowProcess = [];\r\n    selectedActivity: Activity;\r\n    selectedDownwardActivity: Activity;\r\n    selectedProcess: Process;\r\n    linkActivities: any;\r\n    timePeriod: number;\r\n\r\n    constructor(private httpService: HttpService,\r\n        private activityDialogService: ActivityDialogService,\r\n        private processDialogService: ProcessDialogService,\r\n        private viewContainerRef: ViewContainerRef,\r\n        public dialog: MdDialog) {\r\n        this.selectedActivity = null;\r\n        this.linkActivities = {};\r\n    }\r\n\r\n    onSelect({ selected }) {\r\n        this.selectedActivity = selected[0];\r\n    }\r\n\r\n    onDownwardSelect({ selected }) {\r\n        this.selectedDownwardActivity = selected[0];\r\n    }\r\n\r\n    onProcessSelect({ selected }) {\r\n        this.selectedProcess = selected[0];\r\n    }\r\n\r\n    executeActivity(activity: Activity, section?: string) {\r\n        this.activityDialogService\r\n            .confirm(activity, this.viewContainerRef, section)\r\n            .subscribe(res => {\r\n                if (res && !activity) {\r\n                    this.activities = null;\r\n                    this.httpService.addActivity({\r\n                        name: res.name,\r\n                        units: +res.units,\r\n                        inputProdRate: res.inputProdRate,\r\n                        duration: +res.duration,\r\n                        aggressiveDuration: +res.aggressiveDuration,\r\n                        safeProductivityRate: +res.safeProductivityRate,\r\n                        aggressiveProductivityRate: +res.aggressiveProductivityRate,\r\n                        startToFinish: +res.startToFinish,\r\n                        unitDelta: +res.unitDelta,\r\n                        durationFunction: res.durationFunction,\r\n                        dependencies: res.activitySelected.join(',').trim(),\r\n                        processId: res.processSelected,\r\n                        section: section\r\n                    }).subscribe(() => {\r\n                        this.ngOnInit();\r\n                    });\r\n                }\r\n                else if (res && activity) {\r\n                    this.activities = null;\r\n                    this.httpService.updateActivity({\r\n                        id: res.id,\r\n                        name: res.name,\r\n                        units: +res.units,\r\n                        inputProdRate: res.inputProdRate,\r\n                        duration: +res.duration,\r\n                        aggressiveDuration: +res.aggressiveDuration,\r\n                        safeProductivityRate: +res.safeProductivityRate,\r\n                        aggressiveProductivityRate: +res.aggressiveProductivityRate,\r\n                        startToFinish: +res.startToFinish,\r\n                        unitDelta: +res.unitDelta,\r\n                        durationFunction: res.durationFunction,\r\n                        dependencies: res.activitySelected.join(',').trim(),\r\n                        processId: res.processSelected,\r\n                        section: res.section\r\n                    }).subscribe(() => {\r\n                        this.ngOnInit();\r\n                    });\r\n                }\r\n            }, error => alert(error));\r\n    }\r\n\r\n    executeProcess(process: Process) {\r\n        this.processDialogService\r\n            .confirm(process, this.viewContainerRef)\r\n            .subscribe(res => {\r\n                if (res && !process) {\r\n                    this.processes = null;\r\n                    this.httpService.addProcess({\r\n                        name: res.name\r\n                    }).subscribe(() => {\r\n                        this.getProcesses();\r\n                        this.getGraph(false);\r\n                    });\r\n                }\r\n                else if (res && process) {\r\n                    this.activities = null;\r\n                    this.httpService.updateProcess({\r\n                        id: res.id,\r\n                        name: res.name\r\n                    }).subscribe(() => {\r\n                        this.getProcesses();\r\n                        this.getGraph(false);\r\n                    });\r\n                }\r\n            }, error => alert(error));\r\n    }\r\n\r\n    deleteActivity(selectedActivity) {\r\n        this.activities = null;\r\n        this.httpService.deleteActivity(selectedActivity.id).\r\n            subscribe(() => this.ngOnInit(), error => alert(error));\r\n    }\r\n\r\n    deleteProcess() {\r\n        this.processes = null;\r\n        this.httpService.deleteProcess(this.selectedProcess.id).\r\n            subscribe(() => this.ngOnInit(), error => alert(error));\r\n    }\r\n\r\n    getActivities() {\r\n        this.httpService.getActivities()\r\n            .subscribe(\r\n            activities => {\r\n                let allActivities = activities.map(a => {\r\n                    a.dependenciesStr = a.dependencies.split(',').map(d => {\r\n                        var match = activities.find(ac => ac.id == +d);\r\n                        if (match) {\r\n                            return match.name;\r\n                        }\r\n                        return null\r\n                    });\r\n                    return a;\r\n                });\r\n                this.activities = allActivities.filter(a => a.section === 'UPWARD');\r\n                this.downwardActivities = allActivities.filter(a => a.section === 'DOWNWARD');\r\n            },\r\n            error => {\r\n                alert(error);\r\n                /*\r\n                let dialogRef: MdDialogRef<ErrorDialog>;\r\n                let config = new MdDialogConfig();\r\n                config.viewContainerRef = this.viewContainerRef;\r\n                dialogRef = this.dialog.open(ErrorDialog, config);\r\n                dialogRef.componentInstance.errorMessage = error;*/\r\n            });\r\n    }\r\n\r\n    getProcesses() {\r\n        this.httpService.getProcesses()\r\n            .subscribe(\r\n            processes => {\r\n                this.processes = processes;\r\n            },\r\n            error => alert(error)\r\n            );\r\n    }\r\n\r\n    getGraph(withCriticalPath) {\r\n        this.httpService.getGraph(withCriticalPath)\r\n            .subscribe(\r\n            graphConfig => {\r\n                graphConfig.chart.width = '1200';\r\n                this.graphConfig = graphConfig;\r\n            },\r\n            error => alert(error)\r\n            );\r\n    }\r\n\r\n    getLink() {\r\n        this.httpService.getLink()\r\n            .subscribe(link => {\r\n                if (link != null) {\r\n                    this.linkActivities = {\r\n                        upwardAct: link.upwardAct.id,\r\n                        downwardAct: link.downwardAct.id,\r\n                        timePeriod: link.timePeriod\r\n                    };\r\n                }\r\n            },\r\n            error => alert(error))\r\n    }\r\n\r\n    updateLink() {\r\n        this.httpService.updateLink({\r\n            upwardActivity: this.linkActivities.upwardAct,\r\n            downwardActivity: this.linkActivities.downwardAct,\r\n            timePeriod: this.linkActivities.timePeriod\r\n        }).subscribe(() => this.getLink());\r\n        this.linkActivities = {};\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getActivities();\r\n        this.getProcesses();\r\n        this.getLink();\r\n        this.getGraph(false);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { ChartModule } from 'angular2-highcharts';\r\nimport { AppComponent } from './app.component';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ActivityDialogModule } from './activityDialog.module';\r\nimport { ProcessDialogModule } from '../processDialog/processDialog.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HighchartsStatic } from 'angular2-highcharts/dist/HighchartsService';\r\n\r\nexport function highchartsFactory() {\r\n  return require('highcharts');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ChartModule,\r\n    MaterialModule.forRoot(),\r\n    NgxDatatableModule,\r\n    ActivityDialogModule,\r\n    ProcessDialogModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [{\r\n      provide: HighchartsStatic,\r\n      useFactory: highchartsFactory\r\n    }],\r\n  bootstrap: [AppComponent],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export function environment() {\r\n  return {\r\n    production: true\r\n  };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","import { ProcessDialogService } from './processDialog.service';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ProcessDialog }   from './processDialog.component';\r\nimport { HttpService } from '../app/app.httpService';\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        MaterialModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        ProcessDialog,\r\n    ],\r\n    declarations: [\r\n        ProcessDialog,\r\n    ],\r\n    providers: [\r\n        ProcessDialogService,\r\n        HttpService\r\n    ],\r\n    entryComponents: [\r\n        ProcessDialog,\r\n    ],\r\n    schemas: [ \r\n        CUSTOM_ELEMENTS_SCHEMA \r\n    ],\r\n})\r\nexport class ProcessDialogModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/processDialog/processDialog.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"md-toolbar {\\r\\n    background-color: beige;\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 456\n// module chunks = 0","module.exports = \"<div class=\\\"cep-form\\\">\\r\\n    <span>{{dialogName}} Activity</span>\\r\\n    <form #formCtrl=\\\"ngForm\\\">\\r\\n        <md-input-container>\\r\\n            <input md-input placeholder=\\\"Name\\\" [ngModel]=\\\"name\\\" (ngModelChange)=\\\"name = $event\\\" required name=\\\"name\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n            <input md-input placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"units\\\" required name=\\\"units\\\">\\r\\n        </md-input-container>\\r\\n        <md-slide-toggle [ngModel]=\\\"inputProdRate\\\" (ngModelChange)=\\\"inputProdRate = $event\\\" required name=\\\"inputProdRate\\\">Input Productive Rates</md-slide-toggle>\\r\\n        <md-input-container *ngIf=\\\"inputProdRate === true\\\">\\r\\n            <input md-input placeholder=\\\"Safe Productivity Rate\\\" [ngModel]=\\\"safeProductivityRate\\\" (ngModelChange)=\\\"safeProductivityRate = $event\\\"\\r\\n                required name=\\\"safeProductivityRate\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container *ngIf=\\\"inputProdRate === true\\\">\\r\\n            <input md-input placeholder=\\\"Aggressive Productivity Rate\\\" [ngModel]=\\\"aggressiveProductivityRate\\\" name=\\\"aggressiveProductivityRate\\\"\\r\\n                (ngModelChange)=\\\"aggressiveProductivityRate = $event\\\" required>\\r\\n        </md-input-container>\\r\\n        <md-input-container *ngIf=\\\"inputProdRate === false\\\">\\r\\n            <input md-input placeholder=\\\"Safe Duration\\\" [ngModel]=\\\"duration\\\" (ngModelChange)=\\\"duration = $event\\\"\\r\\n                required name=\\\"duration\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container *ngIf=\\\"inputProdRate === false\\\">\\r\\n            <input md-input placeholder=\\\"Aggressive Duration\\\" [ngModel]=\\\"aggressiveDuration\\\" name=\\\"aggressiveDuration\\\"\\r\\n                (ngModelChange)=\\\"aggressiveDuration = $event\\\" required>\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n            <input md-input placeholder=\\\"Finish To Start\\\" [ngModel]=\\\"startToFinish\\\" (ngModelChange)=\\\"startToFinish = $event\\\" required\\r\\n                name=\\\"startToFinish\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n            <input md-input placeholder=\\\"Quantity Delta\\\" [ngModel]=\\\"unitDelta\\\" (ngModelChange)=\\\"unitDelta = $event\\\" required name=\\\"unitDelta\\\">\\r\\n        </md-input-container>\\r\\n        <md-select placeholder=\\\"Process\\\" [(ngModel)]=\\\"processSelected\\\" name=\\\"processSelected\\\" (ngModelChange)=\\\"processSelected = $event\\\">\\r\\n            <md-option *ngFor=\\\"let p of processes\\\" [value]=\\\"p.key\\\">\\r\\n                {{p.value}}\\r\\n            </md-option>\\r\\n        </md-select>\\r\\n        <md-select placeholder=\\\"Duration Function\\\" [(ngModel)]=\\\"durationFunction\\\" name=\\\"durationFunction\\\" required>\\r\\n            <md-option *ngFor=\\\"let vf of durationFunctions\\\" [value]=\\\"vf.key\\\">\\r\\n                {{vf.value}}\\r\\n            </md-option>\\r\\n        </md-select>\\r\\n        <md-select placeholder=\\\"Activity\\\" [(ngModel)]=\\\"activitySelected[0]\\\" name=\\\"activitySelected[0]\\\" required>\\r\\n            <md-option *ngFor=\\\"let act of activities\\\" [value]=\\\"act.key\\\">\\r\\n                {{act.value}}\\r\\n            </md-option>\\r\\n        </md-select>\\r\\n        <md-select *ngIf=\\\"durationFunction === 0\\\" placeholder=\\\"Activity\\\" [(ngModel)]=\\\"activitySelected[1]\\\" name=\\\"activitySelected[1]\\\">\\r\\n            <md-option *ngFor=\\\"let act of activities\\\" [value]=\\\"act.key\\\">\\r\\n                {{act.value}}\\r\\n            </md-option>\\r\\n        </md-select>\\r\\n        <section>\\r\\n            <button type=\\\"submit\\\" md-raised-button (click)=\\\"dialogRef.close(this)\\\" [disabled]=\\\"!formCtrl.form.valid\\\">Save</button>\\r\\n            <button type=\\\"button\\\" md-button (click)=\\\"dialogRef.close()\\\">Cancel</button>\\r\\n        </section>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/activityDialog.component.html\n// module id = 461\n// module chunks = 0","module.exports = \"<md-toolbar>Mod Scheduler</md-toolbar>\\r\\n<md-tab-group>\\r\\n  <md-tab label=\\\"Offsite Activities\\\">\\r\\n    <md-toolbar class=\\\"button-toolbar\\\">\\r\\n      <button (click)=\\\"executeActivity(null, 'UPWARD')\\\" md-raised-button>Add Activity</button>\\r\\n      <button [disabled]=\\\"!selectedActivity\\\" (click)=\\\"executeActivity(selectedActivity, 'UPWARD')\\\" md-raised-button>Update Activity</button>\\r\\n      <button [disabled]=\\\"!selectedActivity\\\" (click)=\\\"deleteActivity(selectedActivity)\\\" md-raised-button>Delete Activity</button>\\r\\n    </md-toolbar>\\r\\n    <ngx-datatable class=\\\"material\\\" [rows]=\\\"activities\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [selected]=\\\"selectedRowActivity\\\"\\r\\n      [selectionType]=\\\"'single'\\\" [columnMode]=\\\"'force'\\\" (select)='onSelect($event)'>\\r\\n      <ngx-datatable-column name=\\\"Name\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" prop=\\\"units\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Duration\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Agg Duration\\\" prop=\\\"aggressiveDuration\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Safe PR\\\" prop=\\\"safeProductivityRate\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Agg PR\\\" prop=\\\"aggressiveProductivityRate\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Finish/Start\\\" prop=\\\"startToFinish\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Quantity Delta\\\" prop=\\\"unitDelta\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Function\\\" prop=\\\"durationFunction\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Dependencies\\\" prop=\\\"dependenciesStr\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Process\\\" prop=\\\"processName\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n    <md-progress-spinner *ngIf=\\\"!activities\\\" mode=\\\"indeterminate\\\"></md-progress-spinner>\\r\\n  </md-tab>\\r\\n  <md-tab label=\\\"OnSite Activities\\\">\\r\\n    <md-toolbar class=\\\"button-toolbar\\\">\\r\\n      <button (click)=\\\"executeActivity(null, 'DOWNWARD')\\\" md-raised-button>Add Activity</button>\\r\\n      <button [disabled]=\\\"!selectedDownwardActivity\\\" (click)=\\\"executeActivity(selectedDownwardActivity,'DOWNWARD')\\\" md-raised-button>Update Activity</button>\\r\\n      <button [disabled]=\\\"!selectedDownwardActivity\\\" (click)=\\\"deleteActivity(selectedDownwardActivity)\\\" md-raised-button>Delete Activity</button>\\r\\n    </md-toolbar>\\r\\n    <ngx-datatable class=\\\"material\\\" [rows]=\\\"downwardActivities\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [selected]=\\\"selectedDownwardRowActivity\\\" [selectionType]=\\\"'single'\\\" [columnMode]=\\\"'force'\\\" (select)='onDownwardSelect($event)'>\\r\\n      <ngx-datatable-column name=\\\"Name\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" prop=\\\"units\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Duration\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Agg Duration\\\" prop=\\\"aggressiveDuration\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Safe PR\\\" prop=\\\"safeProductivityRate\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Agg PR\\\" prop=\\\"aggressiveProductivityRate\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Finish/Start\\\" prop=\\\"startToFinish\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Quantity Delta\\\" prop=\\\"unitDelta\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Function\\\" prop=\\\"durationFunction\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Dependencies\\\" prop=\\\"dependenciesStr\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n      <ngx-datatable-column name=\\\"Process\\\" prop=\\\"processName\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n    <md-progress-spinner *ngIf=\\\"!activities\\\" mode=\\\"indeterminate\\\"></md-progress-spinner>\\r\\n  </md-tab>\\r\\n  <md-tab label=\\\"Processes\\\">\\r\\n    <md-toolbar class=\\\"button-toolbar\\\">\\r\\n      <button (click)=\\\"executeProcess(null)\\\" md-raised-button>Add Process</button>\\r\\n      <button [disabled]=\\\"!selectedProcess\\\" (click)=\\\"executeProcess(selectedProcess)\\\" md-raised-button>Update Process</button>\\r\\n      <button [disabled]=\\\"!selectedProcess\\\" (click)=\\\"deleteProcess()\\\" md-raised-button>Delete Process</button>\\r\\n    </md-toolbar>\\r\\n    <ngx-datatable class=\\\"material\\\" [rows]=\\\"processes\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [selected]=\\\"selectedRowProcess\\\"\\r\\n      [selectionType]=\\\"'single'\\\" [columnMode]=\\\"'force'\\\" (select)='onProcessSelect($event)'>\\r\\n      <ngx-datatable-column name=\\\"Name\\\">\\r\\n        <template ngx-datatable-cell-template let-value=\\\"value\\\">\\r\\n          {{value}}\\r\\n        </template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n    <md-progress-spinner *ngIf=\\\"!processes\\\" mode=\\\"indeterminate\\\"></md-progress-spinner>\\r\\n  </md-tab>\\r\\n  <md-tab label=\\\"Controlling Link\\\">\\r\\n    <md-toolbar class=\\\"button-toolbar\\\">\\r\\n      <button (click)=\\\"updateLink()\\\" md-raised-button>Update</button>\\r\\n    </md-toolbar>\\r\\n    <div class=\\\"form-container\\\">\\r\\n      <md-select placeholder=\\\"Offsite Activity\\\" [ngModel]=\\\"linkActivities.upwardAct\\\" (ngModelChange)=\\\"linkActivities.upwardAct = $event\\\" name=\\\"upwardActivity\\\"\\r\\n        required>\\r\\n        <md-option *ngFor=\\\"let act of activities\\\" [value]=\\\"act.id\\\">{{ act.name }}</md-option>\\r\\n      </md-select>\\r\\n      <md-select placeholder=\\\"OnSite Activity\\\" [ngModel]=\\\"linkActivities.downwardAct\\\" (ngModelChange)=\\\"linkActivities.downwardAct = $event\\\" name=\\\"downwardActivity\\\"\\r\\n      required>\\r\\n        <md-option *ngFor=\\\"let act of downwardActivities\\\" [value]=\\\"act.id\\\">{{ act.name }}</md-option>\\r\\n      </md-select>\\r\\n      <md-input-container>\\r\\n        <input md-input placeholder=\\\"Time Period\\\" [ngModel]=\\\"linkActivities.timePeriod\\\" (ngModelChange)=\\\"linkActivities.timePeriod = $event\\\" name=\\\"timePeriod\\\"\\r\\n          required>\\r\\n      </md-input-container>\\r\\n      <md-progress-spinner *ngIf=\\\"!linkActivities.upwardAct\\\" mode=\\\"indeterminate\\\"></md-progress-spinner>\\r\\n    </div>\\r\\n  </md-tab>\\r\\n  <md-tab label=\\\"Graph\\\">\\r\\n    <md-toolbar class=\\\"button-toolbar\\\">\\r\\n      <button (click)=\\\"getGraph(true)\\\" md-raised-button>Add Critical Path</button>\\r\\n    </md-toolbar>\\r\\n    <chart [options]=\\\"graphConfig\\\"></chart>\\r\\n  </md-tab>\\r\\n</md-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 462\n// module chunks = 0","module.exports = \"<div class=\\\"cep-form\\\">\\r\\n    <span>{{dialogName}} Process</span>\\r\\n    <md-input-container>\\r\\n        <input md-input placeholder=\\\"Name\\\" [ngModel]=\\\"name\\\" (ngModelChange)=\\\"name = $event\\\">\\r\\n    </md-input-container>\\r\\n    <section>\\r\\n        <button type=\\\"button\\\" md-raised-button (click)=\\\"dialogRef.close(this)\\\">Save</button>\\r\\n        <button type=\\\"button\\\" md-button (click)=\\\"dialogRef.close()\\\">Cancel</button>\\r\\n    </section>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/processDialog/processDialog.component.html\n// module id = 463\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/observable/throw'\r\n\r\nexport class Activity {\r\n  constructor(public id: number,\r\n    public name: string,\r\n    public units: number,\r\n    public startToFinish: number,\r\n    public unitDelta: number,\r\n    public durationFunction: number,\r\n    public lag: number,\r\n    public safeProductivityRate: number,\r\n    public aggressiveProductivityRate: number,\r\n    public duration: number,\r\n    public aggressiveDuration: number,\r\n    public inputProdRate: boolean,\r\n    public dependencies: string,\r\n    public process: string,\r\n    public section: string,\r\n    public processId: string) { }\r\n}\r\n\r\nexport class Process {\r\n  constructor(public id: number,\r\n    public name: string) { }\r\n}\r\n\r\nexport class ControllingLink {\r\n  constructor(public upperActivity: string,\r\n    public lowerActivity: string,\r\n    public timePeriod: number) { }\r\n}\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  constructor(private http: Http) { }\r\n  addActivity(activity) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .post('http://localhost:5000/api/activities/', JSON.stringify(activity), { headers: headers }).catch(this.handleError);\r\n  }\r\n  getActivities() {\r\n    return this.http\r\n      .get('http://localhost:5000/api/activities/')\r\n      .map((response: Response) => <Activity[]>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n  getProcesses() {\r\n    return this.http\r\n      .get('http://localhost:5000/api/processes/')\r\n      .map((response: Response) => <Process[]>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n  getGraph(withCriticalPath) {\r\n    return this.http\r\n      .get('http://localhost:5000/api/activities/compute/' + withCriticalPath)\r\n      .map((response: Response) => response.json())\r\n      .do(data => {\r\n        data.plotOptions.line.dataLabels.formatter =\r\n          function () {\r\n            return this.x.toFixed(2)\r\n          };\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n  updateActivity(activity) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .put('http://localhost:5000/api/activities/', JSON.stringify(activity), { headers: headers })\r\n      .catch(this.handleError);;\r\n  }\r\n  deleteActivity(id) {\r\n    return this.http\r\n      .delete('http://localhost:5000/api/activities/' + id)\r\n      .catch(this.handleError);\r\n  }\r\n  deleteProcess(id) {\r\n    return this.http\r\n      .delete('http://localhost:5000/api/processes/' + id)\r\n      .catch(this.handleError);\r\n  }\r\n  addProcess(process) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .post('http://localhost:5000/api/processes/', JSON.stringify(process), { headers: headers })\r\n      .catch(this.handleError);\r\n  }\r\n  updateProcess(process) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .put('http://localhost:5000/api/processes/', JSON.stringify(process), { headers: headers })\r\n      .catch(this.handleError);\r\n  }\r\n  getLink() {\r\n    return this.http\r\n      .get('http://localhost:5000/api/links/')\r\n      .map((response: Response) => <ControllingLink>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n  updateLink(link) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http\r\n      .put('http://localhost:5000/api/links/', JSON.stringify(link), { headers: headers })\r\n      .catch(this.handleError);;\r\n  }\r\n  private handleError(error: Response) {\r\n    return Observable.throw(error.json().Message);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.httpService.ts"],"sourceRoot":""}